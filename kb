project.

aim(project, 'Provide a high level language able to express a musical accompaniment in few lines without the need to write every note').

language.
lexer.
parser.
model.
composedBy(language, lexer).
composedBy(language, parser).
composedBy(language, model).
package(lexer, 'org.fergonco.music.mjargon.lexer').
package(parser, 'org.fergonco.music.mjargon.parser').
package(model, 'org.fergonco.music.mjargon.model').

/* Model */
variableDefinitions.
composedBy(model, variableDefinitions).

timeSignatures.
rhythms.
chordProgression.
noteSequence.
isTypeOf(timeSignatures, variableDefinitions).
isTypeOf(rhythms, variableDefinitions).
isTypeOf(chordProgression, variableDefinition).
isTypeOf(noteSequence, variableDefinition).

/* rhythms */
durations.
composedBy(rhythms, durations).
composedBy(rhythms, timeSignatures).

/* note sequences */
polyphonicNoteSequences.
monophonicNoteSequences.
isTypeOf(polyphonicNoteSequences, noteSequence).
isTypeOf(monophonicNoteSequences, noteSequence).

